---
import Layout from '../../layouts/Layout.astro';
import BlogList from '../../components/BlogList.astro';

export async function getStaticPaths() {
  const posts = await Astro.glob('../blog/*.{md,mdx}');
  const nonDraftPosts = posts.filter(post => !post.frontmatter.draft);
  
  // Get all unique tags
  const uniqueTags = [...new Set(
    nonDraftPosts.flatMap(post => post.frontmatter.tags || [])
  )];
  
  // Return params for each tag
  return uniqueTags.map(tag => {
    const filteredPosts = nonDraftPosts.filter(post => 
      post.frontmatter.tags && post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

// Sort by date
const sortedPosts = posts.sort(
  (a, b) => new Date(b.frontmatter.pubDate) - new Date(a.frontmatter.pubDate)
);
---

<Layout title={`Posts tagged with "${tag}" | MinBlog`} description={`Browse all posts tagged with ${tag}`}>
  <div class="container">
    <header class="tag-header">
      <h1>Posts tagged with <span class="tag-highlight">#{tag}</span></h1>
      <a href="/blog" class="back-link">‚Üê Back to all posts</a>
    </header>
    
    <BlogList posts={sortedPosts} />
  </div>
</Layout>

<style>
  .tag-header {
    padding: 4rem 0 2rem;
    text-align: center;
  }
  
  h1 {
    font-size: 2rem;
    margin-bottom: 1rem;
  }
  
  .tag-highlight {
    color: var(--accent);
  }
  
  .back-link {
    display: inline-block;
    margin-top: 1rem;
    color: var(--text-secondary);
    transition: color 0.2s ease;
  }
  
  .back-link:hover {
    color: var(--accent);
  }
  
  @media (max-width: 768px) {
    .tag-header {
      padding: 3rem 0 1.5rem;
    }
    
    h1 {
      font-size: 1.75rem;
    }
  }
</style>