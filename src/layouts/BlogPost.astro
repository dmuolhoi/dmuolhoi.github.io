---
import Layout from "./Layout.astro";
import formatDate from "../utils/formatDate";
import readingTime from "reading-time";

export interface Props {
  content: {
    title: string;
    description: string;
    pubDate: string;
    updatedDate?: string;
    heroImage?: string;
    tags?: string[];
    draft?: boolean;
  };
}

const {
  content: { title, description, pubDate, updatedDate, heroImage, tags = [] }
} = Astro.props;

const formattedPubDate = formatDate(pubDate);
const formattedUpdatedDate = updatedDate ? formatDate(updatedDate) : null;

const { text: timeToRead } = readingTime(Astro.slots.render('default'));
---

<Layout title={title} description={description} article={true}>
  <article class="blog-post">
    {heroImage && (
      <div class="hero-image">
        <img src={heroImage} alt={title} />
      </div>
    )}
    
    <div class="post-header">
      <h1>{title}</h1>
      <div class="post-meta">
        <time datetime={pubDate}>{formattedPubDate}</time>
        {updatedDate && (
          <span> (Updated: <time datetime={updatedDate}>{formattedUpdatedDate}</time>)</span>
        )}
        <span class="reading-time">Â· {timeToRead}</span>
      </div>
      
      {tags.length > 0 && (
        <div class="post-tags">
          {tags.map((tag) => (
            <a href={`/tags/${tag}`} class="tag">{tag}</a>
          ))}
        </div>
      )}
    </div>
    
    <div class="post-content">
      <slot />
    </div>
  </article>
</Layout>

<style>
  .blog-post {
    max-width: 72ch;
    margin: 0 auto;
    padding: 2rem 1rem;
  }
  
  .hero-image {
    margin: -2rem -1rem 2rem;
  }
  
  .hero-image img {
    width: 100%;
    max-height: 400px;
    object-fit: cover;
  }
  
  .post-header {
    margin-bottom: 3rem;
  }
  
  h1 {
    font-size: 2.5rem;
    line-height: 1.2;
    margin-bottom: 1rem;
  }
  
  .post-meta {
    font-size: 0.9rem;
    color: var(--text-secondary);
  }
  
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }
  
  .tag {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background-color: var(--text-muted);
    color: var(--background);
    border-radius: 2rem;
    font-size: 0.85rem;
    text-decoration: none;
    transition: background-color 0.2s ease;
  }
  
  .tag:hover {
    background-color: var(--accent);
  }
  
  .reading-time {
    margin-left: 0.5rem;
  }
  
  .post-content {
    line-height: 1.6;
  }
</style>